name: 'Employee Management'
description: |-

  API to manage the employee resource.
endpoints:
  -
    httpMethods:
      - GET
    uri: employees
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API to manage the employee resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Employees'
      description: 'This endpoint is used to fetch all employees available in the database.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page_size:
        name: page_size
        description: 'Size per page. Defaults to 5.'
        required: false
        example: 10
        type: integer
        enumValues: []
        custom: []
      page:
        name: page
        description: 'Page to view.'
        required: false
        example: null
        type: integer
        enumValues: []
        custom: []
    cleanQueryParameters:
      page_size: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: Unauthorized.
        headers:
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '20'
          x-ratelimit-remaining: '19'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gaEhaZ486b3ec65dkDVv1Pf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: jobs
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API to manage the employee resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get All Jobs'
      description: 'This endpoint is used to fetch all jobs available in the database.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: Unauthorized.
        headers:
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '20'
          x-ratelimit-remaining: '18'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hfc4k8665bVEgavPea3d1DZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: employees
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API to manage the employee resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a employee'
      description: 'This endpoint lets you create a new employee.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: 'The full name of the employee.'
        required: true
        example: null
        type: string
        enumValues: []
        custom: []
      job:
        name: job
        description: 'The id of the job.'
        required: false
        example: '1'
        type: string
        enumValues: []
        custom: []
      hire_date:
        name: hire_date
        description: 'Must be a valid date in the format <code>d-m-Y</code>.'
        required: true
        example: 16-11-2023
        type: string
        enumValues: []
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: L
        type: string
        enumValues:
          - L
          - P
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date in the format <code>d-m-Y</code>.'
        required: true
        example: 16-11-2023
        type: string
        enumValues: []
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: woconnell@example.org
        type: string
        enumValues: []
        custom: []
      phone:
        name: phone
        description: 'The phone number of the employee.'
        required: false
        example: 0821xxxxxxxx
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      salary:
        name: salary
        description: 'The salary of the employee.'
        required: false
        example: 8000000.0
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      full_name: null
      job: '1'
      hire_date: 16-11-2023
      gender: L
      date_of_birth: 16-11-2023
      email: woconnell@example.org
      phone: 0821xxxxxxxx
      salary: 8000000.0
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ke6fP4vb8a56D31aZcVhdgE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'employees/{id}'
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API to manage the employee resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a Single Employee'
      description: 'This endpoint is used to return a single employees from the database.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the employee.'
        required: true
        example: E001
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: E001
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: Unauthorized.
        headers:
          cache-control: 'no-cache, private'
          x-ratelimit-limit: '20'
          x-ratelimit-remaining: '17'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E1vPc366gaa8dkZhbfV4D5e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'employees/{id}'
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API to manage the employee resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a employee'
      description: 'This endpoint lets you update a employee.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the employee.'
        required: true
        example: E001
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: E001
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      full_name:
        name: full_name
        description: 'The full name of the employee.'
        required: true
        example: null
        type: string
        enumValues: []
        custom: []
      job:
        name: job
        description: 'The id of the job.'
        required: false
        example: '1'
        type: string
        enumValues: []
        custom: []
      hire_date:
        name: hire_date
        description: 'Must be a valid date in the format <code>d-m-Y</code>.'
        required: true
        example: 16-11-2023
        type: string
        enumValues: []
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: P
        type: string
        enumValues:
          - L
          - P
        custom: []
      date_of_birth:
        name: date_of_birth
        description: 'Must be a valid date in the format <code>d-m-Y</code>.'
        required: true
        example: 16-11-2023
        type: string
        enumValues: []
        custom: []
      phone:
        name: phone
        description: 'The phone number of the employee.'
        required: false
        example: 0821xxxxxxxx
        type: string
        enumValues: []
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        custom: []
      salary:
        name: salary
        description: 'The salary of the employee.'
        required: false
        example: 8000000.0
        type: number
        enumValues: []
        custom: []
    cleanBodyParameters:
      full_name: null
      job: '1'
      hire_date: 16-11-2023
      gender: P
      date_of_birth: 16-11-2023
      phone: 0821xxxxxxxx
      salary: 8000000.0
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6baehP835ZcDgkEa6Vd14f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'employees/{id}'
    metadata:
      groupName: 'Employee Management'
      groupDescription: |-

        API to manage the employee resource.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a employee'
      description: 'This endpoint lets you delete a employee.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the employee.'
        required: true
        example: E001
        type: string
        enumValues: []
        custom: []
    cleanUrlParameters:
      id: E001
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "success": true,
           "message": "Data berhasil dihapus",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gE6V1ePdkf34c6Zba5Dvha8'
    controller: null
    method: null
    route: null
    custom: []
